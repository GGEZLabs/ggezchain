syntax = "proto3";

package ggezchain.acl;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ggezchain/acl/params.proto";
import "ggezchain/acl/acl_authority.proto";
import "ggezchain/acl/acl_admin.proto";

option go_package = "github.com/GGEZLabs/ggezchain/x/acl/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/GGEZLabs/ggezchain/acl/params";
  
  }
  
  // Queries a list of AclAuthority items.
  rpc AclAuthority    (QueryGetAclAuthorityRequest) returns (QueryGetAclAuthorityResponse) {
    option (google.api.http).get = "/GGEZLabs/ggezchain/acl/acl_authority/{address}";
  
  }
  rpc AclAuthorityAll (QueryAllAclAuthorityRequest) returns (QueryAllAclAuthorityResponse) {
    option (google.api.http).get = "/GGEZLabs/ggezchain/acl/acl_authority";
  
  }
  
  // Queries a list of AclAdmin items.
  rpc AclAdmin    (QueryGetAclAdminRequest) returns (QueryGetAclAdminResponse) {
    option (google.api.http).get = "/GGEZLabs/ggezchain/acl/acl_admin/{address}";
  
  }
  rpc AclAdminAll (QueryAllAclAdminRequest) returns (QueryAllAclAdminResponse) {
    option (google.api.http).get = "/GGEZLabs/ggezchain/acl/acl_admin";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetAclAuthorityRequest {
  string address = 1;
}

message QueryGetAclAuthorityResponse {
  AclAuthority acl_authority = 1 [(gogoproto.nullable) = false];
}

message QueryAllAclAuthorityRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAclAuthorityResponse {
  repeated AclAuthority                           acl_authority = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

message QueryGetAclAdminRequest {
  string address = 1;
}

message QueryGetAclAdminResponse {
  AclAdmin acl_admin = 1 [(gogoproto.nullable) = false];
}

message QueryAllAclAdminRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAclAdminResponse {
  repeated AclAdmin                               acl_admin   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

