syntax = "proto3";

package ggezchain.acl;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "ggezchain/acl/params.proto";

option go_package = "github.com/GGEZLabs/ggezchain/x/acl/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams    (MsgUpdateParams   ) returns (MsgUpdateParamsResponse   );
  rpc AddAuthority    (MsgAddAuthority   ) returns (MsgAddAuthorityResponse   );
  rpc DeleteAuthority (MsgDeleteAuthority) returns (MsgDeleteAuthorityResponse);
  rpc UpdateAuthority (MsgUpdateAuthority) returns (MsgUpdateAuthorityResponse);
  rpc Init            (MsgInit           ) returns (MsgInitResponse           );
  rpc AddAdmin        (MsgAddAdmin       ) returns (MsgAddAdminResponse       );
  rpc DeleteAdmin     (MsgDeleteAdmin    ) returns (MsgDeleteAdminResponse    );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                       "authority";
  option           (amino.name) = "ggezchain/x/acl/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgAddAuthority {
  option (cosmos.msg.v1.signer) = "creator";
  string creator            = 1;
  string auth_address       = 2;
  string name               = 3;
  string access_definitions = 4;
}

message MsgAddAuthorityResponse {}

message MsgDeleteAuthority {
  option (cosmos.msg.v1.signer) = "creator";
  string creator      = 1;
  string auth_address = 2;
}

message MsgDeleteAuthorityResponse {}

message MsgUpdateAuthority {
  option (cosmos.msg.v1.signer) = "creator";
           string creator                      = 1;
           string auth_address                 = 2;
           string new_name                     = 3;
           string overwrite_access_definitions = 4;
           string add_access_definitions       = 5;
           string update_access_definition     = 6;
  repeated string delete_access_definitions    = 7;
           bool   clear_all_access_definitions = 8;
}

message MsgUpdateAuthorityResponse {}

message MsgInit {
  option (cosmos.msg.v1.signer) = "creator";
   string creator = 1;
   string super_admin = 2;
}

message MsgInitResponse {}

message MsgAddAdmin {
  option (cosmos.msg.v1.signer) = "creator";
           string creator = 1;
  repeated string admins  = 2;
}

message MsgAddAdminResponse {}

message MsgDeleteAdmin {
  option (cosmos.msg.v1.signer) = "creator";
           string creator = 1;
  repeated string admins  = 2;
}

message MsgDeleteAdminResponse {}

