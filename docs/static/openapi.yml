{"id":"github.com/GGEZLabs/ggezchain","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain github.com/GGEZLabs/ggezchain REST API","title":"HTTP API Console","contact":{"name":"github.com/GGEZLabs/ggezchain"},"version":"version not set"},"paths":{"/GGEZLabs/ggezchain/acl/acl_admin":{"get":{"tags":["Query"],"operationId":"GithubComGgezlabsggezchainQuery_AclAdminAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.QueryAllAclAdminResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/acl/acl_admin/{address}":{"get":{"tags":["Query"],"summary":"Queries a list of AclAdmin items.","operationId":"GithubComGgezlabsggezchainQuery_AclAdmin","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.QueryGetAclAdminResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/acl/acl_authority":{"get":{"tags":["Query"],"operationId":"GithubComGgezlabsggezchainQuery_AclAuthorityAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.QueryAllAclAuthorityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/acl/acl_authority/{address}":{"get":{"tags":["Query"],"summary":"Queries a list of AclAuthority items.","operationId":"GithubComGgezlabsggezchainQuery_AclAuthority","parameters":[{"type":"string","name":"address","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.QueryGetAclAuthorityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/acl/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComGgezlabsggezchainQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/acl/super_admin":{"get":{"tags":["Query"],"summary":"Queries a SuperAdmin by index.","operationId":"GithubComGgezlabsggezchainQuery_SuperAdmin","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.QueryGetSuperAdminResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/trade/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"GithubComGgezlabsggezchainQuery_ParamsMixin10","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/trade/stored_temp_trade":{"get":{"tags":["Query"],"operationId":"GithubComGgezlabsggezchainQuery_StoredTempTradeAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.QueryAllStoredTempTradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/trade/stored_temp_trade/{trade_index}":{"get":{"tags":["Query"],"summary":"Queries a list of StoredTempTrade items.","operationId":"GithubComGgezlabsggezchainQuery_StoredTempTrade","parameters":[{"type":"string","format":"uint64","name":"trade_index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.QueryGetStoredTempTradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/trade/stored_trade":{"get":{"tags":["Query"],"operationId":"GithubComGgezlabsggezchainQuery_StoredTradeAll","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.QueryAllStoredTradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/trade/stored_trade/{trade_index}":{"get":{"tags":["Query"],"summary":"Queries a list of StoredTrade items.","operationId":"GithubComGgezlabsggezchainQuery_StoredTrade","parameters":[{"type":"string","format":"uint64","name":"trade_index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.QueryGetStoredTradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/GGEZLabs/ggezchain/trade/trade_index":{"get":{"tags":["Query"],"summary":"Queries a TradeIndex by index.","operationId":"GithubComGgezlabsggezchainQuery_TradeIndex","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.QueryGetTradeIndexResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.acl.Msg/AddAdmin":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_AddAdmin","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.acl.MsgAddAdmin"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.MsgAddAdminResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.acl.Msg/AddAuthority":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_AddAuthority","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.acl.MsgAddAuthority"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.MsgAddAuthorityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.acl.Msg/DeleteAdmin":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_DeleteAdmin","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.acl.MsgDeleteAdmin"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.MsgDeleteAdminResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.acl.Msg/DeleteAuthority":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_DeleteAuthority","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.acl.MsgDeleteAuthority"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.MsgDeleteAuthorityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.acl.Msg/Init":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_Init","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.acl.MsgInit"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.MsgInitResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.acl.Msg/UpdateAuthority":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_UpdateAuthority","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.acl.MsgUpdateAuthority"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.MsgUpdateAuthorityResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.acl.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComGgezlabsggezchainMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.acl.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.acl.Msg/UpdateSuperAdmin":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_UpdateSuperAdmin","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.acl.MsgUpdateSuperAdmin"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.acl.MsgUpdateSuperAdminResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.trade.Msg/CreateTrade":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_CreateTrade","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.trade.MsgCreateTrade"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.MsgCreateTradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.trade.Msg/ProcessTrade":{"post":{"tags":["Msg"],"operationId":"GithubComGgezlabsggezchainMsg_ProcessTrade","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.trade.MsgProcessTrade"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.MsgProcessTradeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/ggezchain.trade.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"GithubComGgezlabsggezchainMsg_UpdateParamsMixin16","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/ggezchain.trade.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/ggezchain.trade.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"cosmos.base.v1beta1.Coin":{"description":"Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto.","type":"object","properties":{"amount":{"type":"string"},"denom":{"type":"string"}}},"ggezchain.acl.AccessDefinition":{"type":"object","properties":{"is_checker":{"type":"boolean"},"is_maker":{"type":"boolean"},"module":{"type":"string"}}},"ggezchain.acl.AclAdmin":{"type":"object","properties":{"address":{"type":"string"}}},"ggezchain.acl.AclAuthority":{"type":"object","properties":{"access_definitions":{"type":"array","items":{"type":"object","$ref":"#/definitions/ggezchain.acl.AccessDefinition"}},"address":{"type":"string"},"name":{"type":"string"}}},"ggezchain.acl.MsgAddAdmin":{"type":"object","properties":{"admins":{"type":"array","items":{"type":"string"}},"creator":{"type":"string"}}},"ggezchain.acl.MsgAddAdminResponse":{"type":"object"},"ggezchain.acl.MsgAddAuthority":{"type":"object","properties":{"access_definitions":{"type":"string"},"auth_address":{"type":"string"},"creator":{"type":"string"},"name":{"type":"string"}}},"ggezchain.acl.MsgAddAuthorityResponse":{"type":"object"},"ggezchain.acl.MsgDeleteAdmin":{"type":"object","properties":{"admins":{"type":"array","items":{"type":"string"}},"creator":{"type":"string"}}},"ggezchain.acl.MsgDeleteAdminResponse":{"type":"object"},"ggezchain.acl.MsgDeleteAuthority":{"type":"object","properties":{"auth_address":{"type":"string"},"creator":{"type":"string"}}},"ggezchain.acl.MsgDeleteAuthorityResponse":{"type":"object"},"ggezchain.acl.MsgInit":{"type":"object","properties":{"creator":{"type":"string"},"super_admin":{"type":"string"}}},"ggezchain.acl.MsgInitResponse":{"type":"object"},"ggezchain.acl.MsgUpdateAuthority":{"type":"object","properties":{"add_access_definitions":{"type":"string"},"auth_address":{"type":"string"},"clear_all_access_definitions":{"type":"boolean"},"creator":{"type":"string"},"delete_access_definitions":{"type":"array","items":{"type":"string"}},"new_name":{"type":"string"},"overwrite_access_definitions":{"type":"string"},"update_access_definition":{"type":"string"}}},"ggezchain.acl.MsgUpdateAuthorityResponse":{"type":"object"},"ggezchain.acl.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/ggezchain.acl.Params"}}},"ggezchain.acl.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"ggezchain.acl.MsgUpdateSuperAdmin":{"type":"object","properties":{"creator":{"type":"string"},"newSuperAdmin":{"type":"string"}}},"ggezchain.acl.MsgUpdateSuperAdminResponse":{"type":"object"},"ggezchain.acl.Params":{"description":"Params defines the parameters for the module.","type":"object"},"ggezchain.acl.QueryAllAclAdminResponse":{"type":"object","properties":{"acl_admin":{"type":"array","items":{"type":"object","$ref":"#/definitions/ggezchain.acl.AclAdmin"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"ggezchain.acl.QueryAllAclAuthorityResponse":{"type":"object","properties":{"acl_authority":{"type":"array","items":{"type":"object","$ref":"#/definitions/ggezchain.acl.AclAuthority"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"ggezchain.acl.QueryGetAclAdminResponse":{"type":"object","properties":{"acl_admin":{"$ref":"#/definitions/ggezchain.acl.AclAdmin"}}},"ggezchain.acl.QueryGetAclAuthorityResponse":{"type":"object","properties":{"acl_authority":{"$ref":"#/definitions/ggezchain.acl.AclAuthority"}}},"ggezchain.acl.QueryGetSuperAdminResponse":{"type":"object","properties":{"super_admin":{"$ref":"#/definitions/ggezchain.acl.SuperAdmin"}}},"ggezchain.acl.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/ggezchain.acl.Params"}}},"ggezchain.acl.SuperAdmin":{"type":"object","properties":{"admin":{"type":"string"}}},"ggezchain.trade.MsgCreateTrade":{"type":"object","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"banking_system_data":{"type":"string"},"coin_minting_price_json":{"type":"string"},"creator":{"type":"string"},"exchange_rate_json":{"type":"string"},"price":{"type":"string"},"receiver_address":{"type":"string"},"trade_data":{"type":"string"},"trade_type":{"$ref":"#/definitions/ggezchain.trade.TradeType"}}},"ggezchain.trade.MsgCreateTradeResponse":{"type":"object","properties":{"status":{"$ref":"#/definitions/ggezchain.trade.TradeStatus"},"trade_index":{"type":"string","format":"uint64"}}},"ggezchain.trade.MsgProcessTrade":{"type":"object","properties":{"creator":{"type":"string"},"process_type":{"$ref":"#/definitions/ggezchain.trade.ProcessType"},"trade_index":{"type":"string","format":"uint64"}}},"ggezchain.trade.MsgProcessTradeResponse":{"type":"object","properties":{"status":{"$ref":"#/definitions/ggezchain.trade.TradeStatus"},"trade_index":{"type":"string","format":"uint64"}}},"ggezchain.trade.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/ggezchain.trade.Params"}}},"ggezchain.trade.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"ggezchain.trade.Params":{"description":"Params defines the parameters for the module.","type":"object"},"ggezchain.trade.ProcessType":{"type":"string","default":"PROCESS_TYPE_UNSPECIFIED","enum":["PROCESS_TYPE_UNSPECIFIED","PROCESS_TYPE_CONFIRM","PROCESS_TYPE_REJECT"]},"ggezchain.trade.QueryAllStoredTempTradeResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"stored_temp_trade":{"type":"array","items":{"type":"object","$ref":"#/definitions/ggezchain.trade.StoredTempTrade"}}}},"ggezchain.trade.QueryAllStoredTradeResponse":{"type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"stored_trade":{"type":"array","items":{"type":"object","$ref":"#/definitions/ggezchain.trade.StoredTrade"}}}},"ggezchain.trade.QueryGetStoredTempTradeResponse":{"type":"object","properties":{"stored_temp_trade":{"$ref":"#/definitions/ggezchain.trade.StoredTempTrade"}}},"ggezchain.trade.QueryGetStoredTradeResponse":{"type":"object","properties":{"stored_trade":{"$ref":"#/definitions/ggezchain.trade.StoredTrade"}}},"ggezchain.trade.QueryGetTradeIndexResponse":{"type":"object","properties":{"trade_index":{"$ref":"#/definitions/ggezchain.trade.TradeIndex"}}},"ggezchain.trade.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/ggezchain.trade.Params"}}},"ggezchain.trade.StoredTempTrade":{"type":"object","properties":{"create_date":{"type":"string"},"temp_trade_index":{"type":"string","format":"uint64"},"trade_index":{"type":"string","format":"uint64"}}},"ggezchain.trade.StoredTrade":{"type":"object","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"banking_system_data":{"type":"string"},"checker":{"type":"string"},"coin_minting_price_json":{"type":"string"},"create_date":{"type":"string"},"exchange_rate_json":{"type":"string"},"maker":{"type":"string"},"price":{"type":"string"},"process_date":{"type":"string"},"receiver_address":{"type":"string"},"result":{"type":"string"},"status":{"$ref":"#/definitions/ggezchain.trade.TradeStatus"},"trade_data":{"type":"string"},"trade_index":{"type":"string","format":"uint64"},"trade_type":{"$ref":"#/definitions/ggezchain.trade.TradeType"},"update_date":{"type":"string"}}},"ggezchain.trade.TradeIndex":{"type":"object","properties":{"next_id":{"type":"string","format":"uint64"}}},"ggezchain.trade.TradeStatus":{"description":" - TRADE_STATUS_UNSPECIFIED: TRADE_STATUS_UNSPECIFIED defines the default trade status.\n - TRADE_STATUS_PENDING: TRADE_STATUS_PENDING defines a trade status of a trade that still\nnot processed.\n - TRADE_STATUS_CANCELED: TRADE_STATUS_CANCELED defines a trade status of a trade that has\ncanceled.\n - TRADE_STATUS_PROCESSED: TRADE_STATUS_PROCESSED defines a trade status of a trade that has\nprocessed.\n - TRADE_STATUS_REJECTED: TRADE_STATUS_REJECTED defines a trade status of a trade that has\nbeen REJECTED.\n - TRADE_STATUS_FAILED: TRADE_STATUS_FAILED defines a trade status of a trade that has\nfailed.","type":"string","default":"TRADE_STATUS_UNSPECIFIED","enum":["TRADE_STATUS_UNSPECIFIED","TRADE_STATUS_PENDING","TRADE_STATUS_CANCELED","TRADE_STATUS_PROCESSED","TRADE_STATUS_REJECTED","TRADE_STATUS_FAILED"]},"ggezchain.trade.TradeType":{"type":"string","default":"TRADE_TYPE_UNSPECIFIED","enum":["TRADE_TYPE_UNSPECIFIED","TRADE_TYPE_BUY","TRADE_TYPE_SELL"]},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}